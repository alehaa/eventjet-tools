#!/usr/bin/env python3

# This file is part of eventjet-tools.
#
# Eventjet-tools is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# eventjet-tools is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# eventjet-tools. If not, see <http://www.gnu.org/licenses/>.
#
#
# Copyright (C)
#   2017 Alexander Haase <ahaase@alexhaase.de>
#

import argparse
import csv
import eventjet
import sys


# Parse the command line arguments.
#
# Note: The input file (or stdin) will be opened with 'utf-8-sig' encoding, to
#       be compatible with the files generated by the eventjet UI. However, the
#       output will be generated in the default encoding.
argp = argparse.ArgumentParser()
argp.add_argument('input', nargs='?', default=sys.stdin,
                  type=argparse.FileType(encoding='utf-8-sig'))
argp.add_argument('output', nargs='?', default=sys.stdout,
                  type=argparse.FileType('w'))
argp.add_argument('--all', '-a', action='store_true', default=False,
                  help="include users not accepting the newsletter")
argp.add_argument('--version', '-V', action='version',
                  version=eventjet.__version__)
args = argp.parse_args()


# Enter a new context, so all file handles will be closed automatically, when
# all data has been processed.
with args.input, args.output:
    # Create a new CSV writer with all attributes supported by facebook. A CSV
    # header will be printed before any input data is processed.
    writer = csv.DictWriter(args.output, ['email', 'phone', 'fn', 'ln', 'zip',
                                          'ct', 'country', 'doby', 'gen'])
    writer.writeheader()

    # Get a list of all guests.
    #
    # Note: Some countries require a constent form of the user receiving adver-
    #       tisement in conjunction with his personal data (which is generated
    #       by this command), thus the list of guests will be filtered by the
    #       guest's acceptance of the newsletter. Please check the law before
    #       disabling this filter!
    guestlist = eventjet.GuestList(args.input)
    if not args.all:
        guestlist = (x for x in guestlist if x['newsletter'])

    # Iterate over all guests and write a line for each one. Attributes not
    # defined for a guest will be left empty. The gender will be converted from
    # the salution into accepted values.
    for guest in guestlist:
        writer.writerow({
            'fn': guest['name'],
            'ln': guest['surname'],
            'zip': guest['address']['zip'] if guest['address'] else None,
            'ct': guest['address']['city'] if guest['address'] else None,
            'country': (guest['address']['country']
                        if guest['address'] else None),
            'email': guest['email'],
            'phone': guest['mobile'],
            'doby': guest['year_of_birth'],
            'gen': ('M' if guest['salutation'] == 'Herr' else
                    ('W' if guest['salutation'] == 'Frau' else None))
        })
